<?php

namespace App\Http\Controllers\Onboarding\RequestTabs;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

use Session;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Crypt;
use App\User;
use App\Models\Company\Department;
use App\Models\Company\Product;
use App\Models\Recruiter\Designation;
use App\Models\Offerletter\SalaryBreakup;
use App\Models\Onboarding\DocumentCollectionDetails;
use App\Models\Onboarding\DocumentCollectionAttributes;
use App\Models\Onboarding\DocumentCollectionDetailsValues;
use App\Models\Onboarding\HiringSourceDetails;
use App\Models\Onboarding\RecruiterDetails;
use App\Models\Onboarding\IncentiveLetterDetails;
use Illuminate\Support\Facades\Validator;
use  App\Models\Attribute\AttributeType;
use App\Models\Offerletter\OfferletterDetails;
use App\Models\Visa\visaType;
use App\Models\Visa\VisaStage;
use App\Models\Visa\Visaprocess;
use UserPermissionAuth;



class TabsController extends Controller
{
    
      
	   public function summaryTabWithFullView(Request $request)
	   {
		    $documentCollectId = $request->documentCollectionId;
		    $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
			
			/*
			*upload document values with label
			*start code
			*/
				$documentCollectionValues = DocumentCollectionDetailsValues::where("document_collection_id",$documentCollectId)->get();
				/* echo '<pre>';
				print_r($documentCollectionValues);
				exit; */
				$docCollectionDetails = array();
				foreach($documentCollectionValues as $_docCollectionValue)
				{
					
					$attrId = $_docCollectionValue->attribute_code;
					$docAttributes = DocumentCollectionAttributes::where("id",$attrId)->first();
					$attributeName = $docAttributes->attribute_name.'^'.$docAttributes->attrbute_type_id;
					
					
					$attributeValue = $_docCollectionValue->attribute_value;
					$docCollectionDetails[$attributeName] = $attributeValue;
				}
				
			/*
			*upload document values with label
			*end code
			*/
			
			/*
			*Define All steps
			*start code
			*/
			$completedStep = 1;
			$OnboardingProgress = '';
			$stepsAll = array();
			/*Step1*/
		    $stepsAll[0]['name'] = 'Document Collection Request'; 
			$stepsAll[0]['stage'] = 'active'; 
			$stepsAll[0]['slagURL'] = 'step1'; 
			$stepsAll[0]['Tab'] = 'active'; 
			
			$OnboardingProgress = 'Document Collection Request';
			/*Step1*/
		    
			/*Step2*/
			$stepsAll[1]['name'] = 'Offer Letter Details Completed'; 
		    if($documentCollectionDetails->status == 1 || $documentCollectionDetails->status == 3)
			{
				$stepsAll[1]['stage'] = 'inprogress'; 
			}
			else
			{
				$completedStep++;
				$stepsAll[1]['stage'] = 'active'; 
				$OnboardingProgress = 'Offer Letter Details Completed';
			}
			$stepsAll[1]['slagURL'] = 'uploadDocument/'.$documentCollectionDetails->id; 
			$stepsAll[1]['Tab'] = 'active'; 
			/*Step2*/
			
			/*Step3*/
			$stepsAll[2]['name'] = 'Offer Letter Generated'; 
			if($documentCollectionDetails->status == 2)
			{
				$stepsAll[2]['stage'] = 'inprogress'; 
				$stepsAll[2]['Tab'] = 'active'; 
			}
			else if($documentCollectionDetails->status > 2 && $documentCollectionDetails->status != 3)
			{
				$completedStep++;
				$stepsAll[2]['stage'] = 'active'; 
				$OnboardingProgress = 'Offer Letter Generated';
				$stepsAll[2]['Tab'] = 'active'; 
			}
			else 
			{
			    $stepsAll[2]['stage'] = 'pending'; 
				$stepsAll[2]['Tab'] = 'disabled-tab'; 
			}
			$stepsAll[2]['slagURL'] = 'createOfferLetter/'.$documentCollectionDetails->id; 
			/*Step3*/
			
			/*Step4*/
			$stepsAll[3]['name'] = 'Upload Signed Offer Letter'; 
			if($documentCollectionDetails->status == 4)
			{
				$stepsAll[3]['stage'] = 'inprogress'; 
				$stepsAll[3]['Tab'] = 'active'; 
			}
			else if($documentCollectionDetails->status > 4)
			{
				$completedStep++;
				$stepsAll[3]['stage'] = 'active'; 
				$OnboardingProgress = 'Upload Signed Offer Letter';
				$stepsAll[3]['Tab'] = 'active'; 
			}
			else
			{
				$stepsAll[3]['stage'] = 'pending'; 
				$stepsAll[3]['Tab'] = 'disabled-tab'; 
			}
			$stepsAll[3]['slagURL'] = 'signedOfferLetter/'.$documentCollectionDetails->id;  
			/*Step4*/
			
			
			/*Step5*/
			$stepsAll[4]['name'] = 'Upload Visa Documents'; 
		    if($documentCollectionDetails->status == 5)
			{
				$stepsAll[4]['stage'] = 'inprogress'; 
				$stepsAll[4]['Tab'] = 'active'; 
			}
			else if($documentCollectionDetails->status > 5)
			{
				$completedStep++;
				$stepsAll[4]['stage'] = 'active'; 
				$OnboardingProgress = 'Upload Visa Documents';
				$stepsAll[4]['Tab'] = 'active'; 
			}
			else
			{
				$stepsAll[4]['stage'] = 'pending'; 
				$stepsAll[4]['Tab'] = 'disabled-tab'; 
			}
			$stepsAll[4]['slagURL'] = 'uploadVisaDocument/'.$documentCollectionDetails->id;  
			/*Step5*/
			
			$stepsAll[5]['name'] = 'Visa Process'; 
			if($documentCollectionDetails->status == 6)
			{
				 $stepsAll[5]['stage'] = 'inprogress'; 
				 $stepsAll[5]['Tab'] = 'active'; 
			}
			else if($documentCollectionDetails->status > 6)
			{
				$completedStep++;
				 $stepsAll[5]['stage'] = 'active'; 
				 $OnboardingProgress = 'Visa Process';
				  $stepsAll[5]['Tab'] = 'active'; 
			}
			else
			{
				 $stepsAll[5]['stage'] = 'pending'; 
				  $stepsAll[5]['Tab'] = 'disabled-tab'; 
			}
		   
			$stepsAll[5]['slagURL'] = 'preVisaProcess/'.$documentCollectionDetails->id; 
			
			$stepsAll[6]['name'] = 'Training and On-Boarding Process'; 
		    $stepsAll[6]['stage'] = 'pending'; 
			$stepsAll[6]['slagURL'] = 'step3'; 
			 $stepsAll[6]['Tab'] = 'disabled-tab'; 
			
			$stepsAll[7]['name'] = 'Bank Code Generation Process'; 
		    $stepsAll[7]['stage'] = 'pending'; 
			$stepsAll[7]['slagURL'] = 'step3'; 
			 $stepsAll[7]['Tab'] = 'disabled-tab'; 
			
			$stepsAll[8]['name'] = 'On-Boarding Completed'; 
		    $stepsAll[8]['stage'] = 'pending'; 
			$stepsAll[8]['slagURL'] = 'step3'; 
			 $stepsAll[8]['Tab'] = 'disabled-tab'; 
			
			$totalStep = 9;
			$p = $completedStep/$totalStep;
			$percentange = round($p*100);
			/*
			*Define All steps
			*end code
			*/
			$visaProcessLists = Visaprocess::where("document_id",$documentCollectId)->orderBy('id','DESC')->get();
			return view("Onboarding/RequestTabs/summaryTabWithFullView",compact('documentCollectionDetails','docCollectionDetails','visaProcessLists','stepsAll','percentange','OnboardingProgress'));
	   }
	   
	   
	   
	   public function signedOfferLetter(Request $request)
	   {
		     $documentCollectId = $request->documentCollectionId;
			  $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
			 return view("Onboarding/RequestTabs/signedOfferLetter",compact('documentCollectId','documentCollectionDetails')); 
	   }
	   
	   public function uploadSignOfferLetterPost(Request $request)
	   {
		    $selectedFilter = $request->input();
			
			$documentCollectId = $selectedFilter['documentCollectionID'];
			  $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
			    $key = 'signed_offerletter';
			   if($request->file($key))
				{
			    $filenameWithExt = $request->file($key)->getClientOriginalName ();
				$filename = pathinfo($filenameWithExt, PATHINFO_FILENAME);
				$fileExtension =$request->file($key)->getClientOriginalExtension();
				
				$newFileName = $documentCollectionDetails->emp_name.'-'.$documentCollectId.'-SignedOfferLetter.'.$fileExtension;
				
				    if(file_exists(public_path('uploads/SignedOfferLetters/'.$newFileName))){

					  unlink(public_path('uploads/SignedOfferLetters/'.$newFileName));

					}
				
				/*
				*Updating File Name
				*/
				
				/*
				*Updating File Name
				*/
				// Get just Extension
				$extension = $request->file($key)->getClientOriginalExtension();
				// Filename To store
				$fileNameToStore = $filename. '_'. time().'.'.$extension;
				
				
				$request->file($key)->move(public_path('uploads/SignedOfferLetters/'), $newFileName);
				
				
				/*
				*update request collection Model
				*start code
				*/
				$updateDocumentCollectionObj = DocumentCollectionDetails::find($documentCollectId);
				$updateDocumentCollectionObj->signed_offerletter_name = $newFileName;
				$updateDocumentCollectionObj->status = 5;
				$updateDocumentCollectionObj->signed_offerletter_date = date("Y-m-d");
				$updateDocumentCollectionObj->serialized_id = 'signedOfferletter-000'.$documentCollectId;
				$updateDocumentCollectionObj->save();
				
				/*
				*update request collection Model
				*end code
				*/
				$request->session()->flash('success','Signed offer letter uploaded successfully.');
		
				return redirect('documentcollection');
				}
				else
				{
					$request->session()->flash('error','issue to upload Signed offer letter.');
		
				return redirect('documentcollection');
				}
	   }
	   
	   public function uploadVisaDocument(Request $request)
	   {
		   $uploadDetails = array();
		   $id = $request->id; 
		   $documentDetails = DocumentCollectionDetails::where("id",$id)->first();
		   $documentAttributes = DocumentCollectionAttributes::where("status",1)->where("attribute_area","both")->orWhere("attribute_area","visaprocess")->get();
		   $documentAttributesDetails =DocumentCollectionDetailsValues::where("document_collection_id",$id)->get();
		   foreach($documentAttributesDetails as $_documentCUpload)
		   {
			   $uploadDetails[$_documentCUpload->attribute_code] = $_documentCUpload->attribute_value;
		   }
			
			/* echo '<pre>';
			print_r($uploadDetails);
			exit; */
		   return view("Onboarding/RequestTabs/uploadVisaDocument",compact('documentDetails','documentAttributes','uploadDetails'));
	   }
	   
	   public function uploadVisaDocumentStart(Request $request)
	   {
		    $selectedFilter = $request->input();
		  
		   $saveData = array();
		  
		   
		   $documentCollectionId = $selectedFilter['documentCollectionID'];
		   $status = $selectedFilter['status'];
		   $num = $documentCollectionId;
		    unset($selectedFilter['_token']);
		    unset($selectedFilter['status']);
		    unset($selectedFilter['documentCollectionID']);
		    unset($selectedFilter['_url']);
			
		   
		
			$keys = array_keys($_FILES);
			
			$filesAttributeInfo = array();
			$listOfAttribute = array();
			$fileIndex = 0;
			
			foreach($keys as $key)
			{
				if($request->file($key))
				{
				 $filenameWithExt = $request->file($key)->getClientOriginalName ();
				$filename = pathinfo($filenameWithExt, PATHINFO_FILENAME);
				$fileExtension =$request->file($key)->getClientOriginalExtension();
				$vKey = $keys[$fileIndex];
				$newFileName = $keys[$fileIndex].'-'.$num.'.'.$fileExtension;
				
				    if(file_exists(public_path('documentCollectionFiles/'.$newFileName))){

					  unlink(public_path('documentCollectionFiles/'.$newFileName));

					}
				
				/*
				*Updating File Name
				*/
				$filesAttributeInfo[$vKey] = $newFileName;
				$listOfAttribute[] = $vKey;
				/*
				*Updating File Name
				*/
				// Get just Extension
				$extension = $request->file($key)->getClientOriginalExtension();
				// Filename To store
				$fileNameToStore = $filename. '_'. time().'.'.$extension;
				
				
				$request->file($key)->move(public_path('documentCollectionFiles/'), $newFileName);
				$fileIndex++;
				}
			}
			
			
			
			foreach($selectedFilter as $key=>$value)
			{
				
				$existDocument = DocumentCollectionDetailsValues::where("document_collection_id",$documentCollectionId)->where("attribute_code",$key)->first();
				if($existDocument != '')
				{
					$objDocument= DocumentCollectionDetailsValues::find($existDocument->id);
				}
				else
				{
				$objDocument = new DocumentCollectionDetailsValues();	
				}	
				
				$objDocument->document_collection_id = $documentCollectionId;
				$objDocument->attribute_code = $key;
				$objDocument->attribute_value = $value;
				$objDocument->save();
				
				
			}
			
			foreach($keys as $key)
			{
				if(in_array($key,$listOfAttribute))
				{
					
					$existDocument = DocumentCollectionDetailsValues::where("document_collection_id",$documentCollectionId)->where("attribute_code",$key)->first();
					if($existDocument != '')
					{
						$objDocument= DocumentCollectionDetailsValues::find($existDocument->id);
					}
					else
					{
						$objDocument = new DocumentCollectionDetailsValues();
					}
					$objDocument->document_collection_id = $documentCollectionId;
					$objDocument->attribute_code = $key;
					$objDocument->attribute_value = $filesAttributeInfo[$key];
					$objDocument->save();
					
				}
			}
			
		
			/*
			*update Status on main Document Collection table
			*/
			$documentCollectionMod = DocumentCollectionDetails::find($documentCollectionId);
			$documentCollectionMod->status = $status;
			if($status == 6)
			{
				$documentCollectionMod->serialized_id = 'VisaDocCollection-Completed-000'.$documentCollectionId;
				$documentCollectionMod->upload_visa_document_date = date("Y-m-d");
			}
			else
			{
				$documentCollectionMod->serialized_id = 'VisaDocCollection-Inprogress-000'.$documentCollectionId;
			}
			
			$documentCollectionMod->save();
			$request->session()->flash('message','Visa Document Upload Successfully.');
		
		   return redirect('documentcollection');
	   }
	   
	   public function tab2EmpDetails(Request $request)
	   {
		      $documentCollectId = $request->documentCollectionId;
			 $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
			
			 return view("Onboarding/RequestTabs/employeeDetails",compact('documentCollectionDetails')); 
	   }
	   
	   
	    public function tab3EmpDetails(Request $request)
		   {
				  $documentCollectId = $request->documentCollectionId;
				 $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
				$documentCollectionValues = DocumentCollectionDetailsValues::where("document_collection_id",$documentCollectId)->get();
				/* echo '<pre>';
				print_r($documentCollectionValues);
				exit; */
				$docCollectionDetails = array();
				foreach($documentCollectionValues as $_docCollectionValue)
				{
					
					$attrId = $_docCollectionValue->attribute_code;
					$docAttributes = DocumentCollectionAttributes::where("id",$attrId)->first();
					
					if($docAttributes->attribute_area== 'offerletter' || $docAttributes->attribute_area== 'both')
					{
						$attributeName = $docAttributes->attribute_name.'^'.$docAttributes->attrbute_type_id;
						$attributeValue = $_docCollectionValue->attribute_value;
						$docCollectionDetails[$attributeName] = $attributeValue;
					}
				}
				/* echo '<pre>';
				print_r($docCollectionDetails);
				exit;  */
				 return view("Onboarding/RequestTabs/offerLetterDocument",compact('documentCollectionDetails','docCollectionDetails')); 
		   }
		   
		  public function tab4EmpDetails(Request $request)
		   {
				  $documentCollectId = $request->documentCollectionId;
				 $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
				
				 return view("Onboarding/RequestTabs/offerIncentiveletter",compact('documentCollectionDetails')); 
		   }
		  public function tab5EmpDetails(Request $request)
		  {
			  $documentCollectId = $request->documentCollectionId;
				 $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
				$documentCollectionValues = DocumentCollectionDetailsValues::where("document_collection_id",$documentCollectId)->get();
				/* echo '<pre>';
				print_r($documentCollectionValues);
				exit; */
				$docCollectionDetails = array();
				foreach($documentCollectionValues as $_docCollectionValue)
				{
					
					$attrId = $_docCollectionValue->attribute_code;
					$docAttributes = DocumentCollectionAttributes::where("id",$attrId)->first();
					if($docAttributes->attribute_area== 'visaprocess' || $docAttributes->attribute_area== 'both')
					{
					$attributeName = $docAttributes->attribute_name.'^'.$docAttributes->attrbute_type_id;
					$attributeValue = $_docCollectionValue->attribute_value;
					$docCollectionDetails[$attributeName] = $attributeValue;
					}
				}
				/* echo '<pre>';
				print_r($docCollectionDetails);
				exit;  */
				 return view("Onboarding/RequestTabs/visaDocument",compact('documentCollectionDetails','docCollectionDetails'));
		  }	

	public function tabvisaProcessPanel(Request $request)
	{
		$documentCollectId = $request->documentCollectionId;
		$documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
		/*
				*total Cost and percentage work
				*/
				/* echo $documentId;
				echo '<br />';
				echo $typeId;
				exit; */
				$visaProcessDetailAll =  Visaprocess::where("document_id",$documentCollectId)->get();
				
				$checkCost = array();
				$totalCost = 0;
				foreach($visaProcessDetailAll as $all)
				{
					if($all->stage_staus == 2 || $all->stage_staus == 3)
					{
					$costEach = $all->cost;
					$totalCost = $totalCost+$costEach;
					$checkCost[] = $all->cost;
					}
				}
				
				
				/*
				*total Cost and percentage work
				*/
				/*
				*percentage work
				*/
				$visaStageD = '';
				$lastStageCompleted =  Visaprocess::where("document_id",$documentCollectId)->where("stage_staus",2)->orderBy("id","DESC")->first();
				if($lastStageCompleted != '')
				{
				 $visaStageId = $lastStageCompleted->visa_stage;
				$visaStageD = VisaStage::where("id",$visaStageId)->first();
				
				$completedStageOrder = $visaStageD->stage_order;
				$typeId = $lastStageCompleted->visa_type;
				$totalStagesCount = VisaStage::where("visa_type",$typeId)->where("status",1)->count();
				$p1 = $completedStageOrder/$totalStagesCount;
				$p2 = round($p1*100);
				$percentage = $p2;
				$firstStageCompleted =  Visaprocess::where("document_id",$documentCollectId)->orderBy("id","ASC")->first();
				 $initiatedDate = $firstStageCompleted->created_at;
			   $now = date("Y-m-d");
			 
			   $datediff = strtotime($now) - strtotime($initiatedDate);

				$totalDays =   round($datediff / (60 * 60 * 24));
					if($totalDays < 0)
					{
						$totalDays = 0;
					}
				}
				else
				{
					$percentage = 0;
					$totalDays=0;
				}
				/*
				*percentage work
				*/
		
		return view("Onboarding/RequestTabs/tabvisaProcessPanel",compact('documentCollectionDetails','totalCost','percentage','lastStageCompleted','visaStageD','totalDays'));
	}		  
	   
	   public static function getPopupContents($processName,$processStatus,$documentCollectId)
	   {
		   /* echo $processName;
		   echo '<br />';
		   echo $processStatus;
		   echo '<br />';
		   echo $documentCollectId;
		   exit; */
		  $documentCollectionDetails = DocumentCollectionDetails::where("id",$documentCollectId)->first();
		  $arrayOfDetails = array();
		  switch($processName)
		  {
			  case 'Document Collection Request':
			            $currentDate = date("Y-m-d");
						$startDate = date("Y-m-d",strtotime($documentCollectionDetails->created_at));
						
						$datediff = strtotime($currentDate) - strtotime($startDate);

						$days =   round($datediff / (60 * 60 * 24));
						$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->created_at));
						$arrayOfDetails['EndDate'] = '--';
						$arrayOfDetails['days'] = $days;
						break;
			  
			  
			  case 'Offer Letter Details Completed':
					if($processStatus == 'inprogress')
					{
						$currentDate = date("Y-m-d");
						$startDate = date("Y-m-d",strtotime($documentCollectionDetails->created_at));
						
						$datediff = strtotime($currentDate) - strtotime($startDate);

						$days =   round($datediff / (60 * 60 * 24));
						$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->created_at));
						$arrayOfDetails['EndDate'] = '--';
						$arrayOfDetails['days'] = $days;
					}
					
					if($processStatus == 'active')
					{
						$currentDate = date("Y-m-d",strtotime($documentCollectionDetails->offer_letter_details_date));
						$startDate = date("Y-m-d",strtotime($documentCollectionDetails->created_at));
						
						$datediff = strtotime($currentDate) - strtotime($startDate);

						$days =   round($datediff / (60 * 60 * 24));
						$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->created_at));
						$arrayOfDetails['EndDate'] = date("d M Y",strtotime($documentCollectionDetails->offer_letter_details_date));
						$arrayOfDetails['days'] = $days;
					}
					break;
					
					
					
				case 'Offer Letter Generated':
					if($processStatus == 'inprogress')
					{
						$currentDate = date("Y-m-d");
						$startDate = date("Y-m-d",strtotime($documentCollectionDetails->offer_letter_details_date));
						
						$datediff = strtotime($currentDate) - strtotime($startDate);

						$days =   round($datediff / (60 * 60 * 24));
						$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->offer_letter_details_date));
						$arrayOfDetails['EndDate'] = '--';
						$arrayOfDetails['days'] = $days;
					}
					
					if($processStatus == 'active')
					{
						$currentDate = date("Y-m-d",strtotime($documentCollectionDetails->offer_letter_generated_date));
						$startDate = date("Y-m-d",strtotime($documentCollectionDetails->offer_letter_details_date));
						
						$datediff = strtotime($currentDate) - strtotime($startDate);

						$days =   round($datediff / (60 * 60 * 24));
						$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->offer_letter_details_date));
						$arrayOfDetails['EndDate'] = date("d M Y",strtotime($documentCollectionDetails->offer_letter_generated_date));
						$arrayOfDetails['days'] = $days;
					}
					break;
					
					
					case 'Upload Signed Offer Letter':
						if($processStatus == 'inprogress')
						{
							$currentDate = date("Y-m-d");
							$startDate = date("Y-m-d",strtotime($documentCollectionDetails->offer_letter_generated_date));
							
							$datediff = strtotime($currentDate) - strtotime($startDate);

							$days =   round($datediff / (60 * 60 * 24));
							$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->offer_letter_generated_date));
							$arrayOfDetails['EndDate'] = '--';
							$arrayOfDetails['days'] = $days;
						}
						
						if($processStatus == 'active')
						{
							$currentDate = date("Y-m-d",strtotime($documentCollectionDetails->signed_offerletter_date));
							$startDate = date("Y-m-d",strtotime($documentCollectionDetails->offer_letter_generated_date));
							
							$datediff = strtotime($currentDate) - strtotime($startDate);

							$days =   round($datediff / (60 * 60 * 24));
							$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->offer_letter_generated_date));
							$arrayOfDetails['EndDate'] = date("d M Y",strtotime($documentCollectionDetails->signed_offerletter_date));
							$arrayOfDetails['days'] = $days;
						}
					break;
					
					
					case 'Upload Visa Documents':
						if($processStatus == 'inprogress')
						{
							$currentDate = date("Y-m-d");
							$startDate = date("Y-m-d",strtotime($documentCollectionDetails->signed_offerletter_date));
							
							$datediff = strtotime($currentDate) - strtotime($startDate);

							$days =   round($datediff / (60 * 60 * 24));
							$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->signed_offerletter_date));
							$arrayOfDetails['EndDate'] = '--';
							$arrayOfDetails['days'] = $days;
						}
						
						if($processStatus == 'active')
						{
							$currentDate = date("Y-m-d",strtotime($documentCollectionDetails->upload_visa_document_date));
							$startDate = date("Y-m-d",strtotime($documentCollectionDetails->signed_offerletter_date));
							
							$datediff = strtotime($currentDate) - strtotime($startDate);

							$days =   round($datediff / (60 * 60 * 24));
							$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->signed_offerletter_date));
							$arrayOfDetails['EndDate'] = date("d M Y",strtotime($documentCollectionDetails->upload_visa_document_date));
							$arrayOfDetails['days'] = $days;
						}
					break;
					
					
					case 'Visa Process':
						if($processStatus == 'inprogress')
						{
							$currentDate = date("Y-m-d");
							$startDate = date("Y-m-d",strtotime($documentCollectionDetails->upload_visa_document_date));
							
							$datediff = strtotime($currentDate) - strtotime($startDate);

							$days =   round($datediff / (60 * 60 * 24));
							$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->upload_visa_document_date));
							$arrayOfDetails['EndDate'] = '--';
							$arrayOfDetails['days'] = $days;
						}
						
						if($processStatus == 'active')
						{
							$currentDate = date("Y-m-d",strtotime($documentCollectionDetails->upload_visa_document_date));
							$startDate = date("Y-m-d",strtotime($documentCollectionDetails->signed_offerletter_date));
							
							$datediff = strtotime($currentDate) - strtotime($startDate);

							$days =   round($datediff / (60 * 60 * 24));
							$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->signed_offerletter_date));
							$arrayOfDetails['EndDate'] = date("d M Y",strtotime($documentCollectionDetails->upload_visa_document_date));
							$arrayOfDetails['days'] = $days;
						}
					break;
					
					default:
						$currentDate = date("Y-m-d");
						$startDate = date("Y-m-d",strtotime($documentCollectionDetails->created_at));
						
						$datediff = strtotime($currentDate) - strtotime($startDate);

						$days =   round($datediff / (60 * 60 * 24));
						$arrayOfDetails['StartDate'] = date("d M Y",strtotime($documentCollectionDetails->created_at));
						$arrayOfDetails['EndDate'] = '--';
						$arrayOfDetails['days'] = $days;
						break;
					
		  }
		 
		  return $arrayOfDetails;
		  
	   }
	   
}
